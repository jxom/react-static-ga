{"version":3,"sources":["../../src/utils/index.js"],"names":["ChalkColor","yarn","npm","findAvailablePort","start","PortFinder","getPortPromise","port","stopPort","copyPublicFolder","config","fs","ensureDirSync","paths","PUBLIC","copySync","DIST","dereference","filter","file","INDEX","createIndexFilePlaceholder","Document","siteData","Component","DefaultDocument","DocumentHtml","Html","Head","Body","html","outputFile","HTML_TEMPLATE","glob","path","options","Promise","resolve","reject","err","files","times","time","message","performance","now","timeEnd","seconds","console","log","Math","round","debounce","func","wait","immediate","timeout","args","later","callNow","clearTimeout","setTimeout","escapeReg","escapeRegExp","str","replace"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAGA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;;;;;;;;;;;;;;;AACO,IAAMA,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,GAAG,EAAE;AAFmB,CAAnB;;;AAKA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;AAAA,SACpCC,oBAAWC,cAAX,CAA0B;AACxBC,IAAAA,IAAI,EAAEH,KADkB;AAExBI,IAAAA,QAAQ,EAAEJ,KAAK,GAAG;AAFM,GAA1B,CADoC;AAAA,CAA/B;;;;AAMA,SAASK,gBAAT,CAA0BC,MAA1B,EAAkC;AACvCC,mBAAGC,aAAH,CAAiBF,MAAM,CAACG,KAAP,CAAaC,MAA9B;;AAEAH,mBAAGI,QAAH,CAAYL,MAAM,CAACG,KAAP,CAAaC,MAAzB,EAAiCJ,MAAM,CAACG,KAAP,CAAaG,IAA9C,EAAoD;AAClDC,IAAAA,WAAW,EAAE,IADqC;AAElDC,IAAAA,MAAM,EAAE,gBAAAC,IAAI;AAAA,aAAIA,IAAI,KAAKT,MAAM,CAACG,KAAP,CAAaO,KAA1B;AAAA;AAFsC,GAApD;AAID;;SAEqBC,0B;;;;;;;4BAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+BACLX,MADK,EACKY,QADL,eACKA,QADL,EACeT,KADf,eACeA,KADf,EACsBU,QADtB,eACsBA,QADtB;AAGL;AACMC,YAAAA,SAJD,GAIaF,QAAQ,IAAIG,+BAJzB;AAKCC,YAAAA,YALD,GAKgB,4BACnB,6BAAC,SAAD;AACE,cAAA,UAAU,EAAE,EADd;AAEE,cAAA,IAAI,EAAEC,oBAFR;AAGE,cAAA,IAAI,EAAEC,oBAHR;AAIE,cAAA,IAAI,EAAEC,oBAJR;AAKE,cAAA,QAAQ,EAAEN,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOE;AAAK,cAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADmB,CALhB;AAgBCO,YAAAA,IAhBD,4BAgB0BJ,YAhB1B,GAkBL;;AAlBK;AAAA,mBAmBCf,iBAAGoB,UAAH,CAAclB,KAAK,CAACmB,aAApB,EAAmCF,IAAnC,CAnBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsBA,SAASG,IAAT,CAAcC,IAAd,EAAkC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACvC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,WACjB,mBAASJ,IAAT,EAAeC,OAAf,EAAwB,UAACI,GAAD,EAAMC,KAAN,EAAgB;AACtC,UAAID,GAAJ,EAAS;AACP,eAAOD,MAAM,CAACC,GAAD,CAAb;AACD;;AACDF,MAAAA,OAAO,CAACG,KAAD,CAAP;AACD,KALD,CADiB;AAAA,GAAZ,CAAP;AAQD;;AAED,IAAMC,KAAK,GAAG,EAAd;;AACO,SAASC,IAAT,CAAcC,OAAd,EAAuB;AAC5BF,EAAAA,KAAK,CAACE,OAAD,CAAL,GAAiBC,wBAAYC,GAAZ,KAAoB,IAArC;AACD;;AACM,SAASC,OAAT,CAAiBH,OAAjB,EAA0B;AAC/B,MAAIF,KAAK,CAACE,OAAD,CAAT,EAAoB;AAClB,QAAII,OAAO,GAAG,CAACH,wBAAYC,GAAZ,KAAoB,IAApB,GAA2BJ,KAAK,CAACE,OAAD,CAAjC,IAA8C,EAA5D;AACAF,IAAAA,KAAK,CAACE,OAAD,CAAL,GAAiB,IAAjB;;AAEA,QAAII,OAAO,GAAG,GAAd,EAAmB;AACjBC,MAAAA,OAAO,CAACC,GAAR,WAAeN,OAAf;AACA;AACD;;AAED,QAAII,OAAO,GAAG,CAAd,EAAiB;AACfA,MAAAA,OAAO,GAAGG,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAG,EAArB,IAA2B,EAArC;AACD,KAFD,MAEO;AACLA,MAAAA,OAAO,GAAGG,IAAI,CAACC,KAAL,CAAWJ,OAAX,IAAsB,EAAhC;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,WAAeN,OAAf,eAA2BI,OAA3B;AACD;AACF;;AAEM,SAASK,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAyC;AAC9C,MAAIC,OAAJ;AACA,SAAO,YAAa;AAAA,sCAATC,IAAS;AAATA,MAAAA,IAAS;AAAA;;AAClB,QAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBF,MAAAA,OAAO,GAAG,IAAV;AACA,UAAI,CAACD,SAAL,EAAgBF,IAAI,MAAJ,SAAQI,IAAR;AACjB,KAHD;;AAIA,QAAME,OAAO,GAAGJ,SAAS,IAAI,CAACC,OAA9B;AACAI,IAAAA,YAAY,CAACJ,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGK,UAAU,CAACH,KAAD,EAAQJ,IAAR,CAApB;AACA,QAAIK,OAAJ,EAAaN,IAAI,MAAJ,SAAQI,IAAR;AACd,GATD;AAUD;;AAED,IAAMK,SAAS,GAAG,qBAAlB;;AACO,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAChC,SAAOA,GAAG,CAACC,OAAJ,CAAYH,SAAZ,EAAuB,MAAvB,CAAP;AACD;;;;;;;;;;;;;0BA7FY9D,U;0BAKAG,iB;0BAMGM,gB;0BASMY,0B;0BAsBNY,I;0BAWVQ,K;0BACUC,I;0BAGAI,O;0BAmBAM,Q;0BAcVU,S;0BACUC,Y","sourcesContent":["/* eslint-disable import/no-dynamic-require, react/no-danger */\nimport React from 'react'\nimport { renderToString } from 'react-dom/server'\nimport PortFinder from 'portfinder'\nimport fs from 'fs-extra'\nimport nodeGlob from 'glob'\nimport { performance } from 'perf_hooks'\n//\nimport { DefaultDocument, Html, Head, Body } from '../static/RootComponents'\n\n// Export all shared utils\nexport * from '../browser/utils'\n\nexport { default as progress } from './progress'\nexport const ChalkColor = {\n  yarn: '#2c8ebb',\n  npm: '#cb3837',\n}\n\nexport const findAvailablePort = start =>\n  PortFinder.getPortPromise({\n    port: start,\n    stopPort: start + 1000,\n  })\n\nexport function copyPublicFolder(config) {\n  fs.ensureDirSync(config.paths.PUBLIC)\n\n  fs.copySync(config.paths.PUBLIC, config.paths.DIST, {\n    dereference: true,\n    filter: file => file !== config.paths.INDEX,\n  })\n}\n\nexport async function createIndexFilePlaceholder({\n  config: { Document, paths, siteData },\n}) {\n  // Render the base document component to string with siteprops\n  const Component = Document || DefaultDocument\n  const DocumentHtml = renderToString(\n    <Component\n      renderMeta={{}}\n      Html={Html}\n      Head={Head}\n      Body={Body}\n      siteData={siteData}\n    >\n      <div id=\"root\" />\n    </Component>\n  )\n  const html = `<!DOCTYPE html>${DocumentHtml}`\n\n  // Write the Document to index.html\n  await fs.outputFile(paths.HTML_TEMPLATE, html)\n}\n\nexport function glob(path, options = {}) {\n  return new Promise((resolve, reject) =>\n    nodeGlob(path, options, (err, files) => {\n      if (err) {\n        return reject(err)\n      }\n      resolve(files)\n    })\n  )\n}\n\nconst times = {}\nexport function time(message) {\n  times[message] = performance.now() / 1000\n}\nexport function timeEnd(message) {\n  if (times[message]) {\n    let seconds = (performance.now() / 1000 - times[message]) * 10\n    times[message] = null\n\n    if (seconds < 0.1) {\n      console.log(`${message}`)\n      return\n    }\n\n    if (seconds < 1) {\n      seconds = Math.round(seconds * 10) / 10\n    } else {\n      seconds = Math.round(seconds) / 10\n    }\n    console.log(`${message} (${seconds}s)`)\n  }\n}\n\nexport function debounce(func, wait, immediate) {\n  let timeout\n  return (...args) => {\n    const later = () => {\n      timeout = null\n      if (!immediate) func(...args)\n    }\n    const callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) func(...args)\n  }\n}\n\nconst escapeReg = /[\\\\^$.*+?()[\\]{}|]/g\nexport function escapeRegExp(str) {\n  return str.replace(escapeReg, '\\\\$&')\n}\n"],"file":"index.js"}