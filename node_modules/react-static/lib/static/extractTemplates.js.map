{"version":3,"sources":["../../src/static/extractTemplates.js"],"names":["config","console","log","chalk","green","templates","notFoundPending","routes","forEach","route","component","index","indexOf","path","unshift","templateIndex","push","length","Error","extractTemplates"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;4BAEgB,iBAAgCA,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,6BAAKC,eAAMC,KAAN,CAAY,6BAAZ,CAAL,EAFc,CAId;;AACMC,YAAAA,SALQ,GAKI,EALJ;AAMVC,YAAAA,eANU,GAMQ,IANR;AAQdN,YAAAA,MAAM,CAACO,MAAP,CAAcC,OAAd,CAAsB,UAAAC,KAAK,EAAI;AAC7B,kBAAI,CAACA,KAAK,CAACC,SAAX,EAAsB;AACpB;AACD,eAH4B,CAI7B;;;AACA,kBAAMC,KAAK,GAAGN,SAAS,CAACO,OAAV,CAAkBH,KAAK,CAACC,SAAxB,CAAd;;AACA,kBAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB;AACA,oBAAIF,KAAK,CAACI,IAAN,KAAe,KAAnB,EAA0B;AACxBR,kBAAAA,SAAS,CAACS,OAAV,CAAkBL,KAAK,CAACC,SAAxB;AACAJ,kBAAAA,eAAe,GAAG,KAAlB;AACAG,kBAAAA,KAAK,CAACM,aAAN,GAAsB,CAAtB;AACD,iBAJD,MAIO;AACLV,kBAAAA,SAAS,CAACW,IAAV,CAAeP,KAAK,CAACC,SAArB;AACAD,kBAAAA,KAAK,CAACM,aAAN,GAAsBT,eAAe,GACjCD,SAAS,CAACY,MADuB,GAEjCZ,SAAS,CAACY,MAAV,GAAmB,CAFvB;AAGD;AACF,eAZD,MAYO;AACL;AACAR,gBAAAA,KAAK,CAACM,aAAN,GAAsBT,eAAe,GAAGK,KAAK,GAAG,CAAX,GAAeA,KAApD;AACD;AACF,aAtBD;AAuBA,gCAAQR,eAAMC,KAAN,CAAY,6BAAZ,CAAR;;AA/Bc,iBAiCVE,eAjCU;AAAA;AAAA;AAAA;;AAAA,kBAkCN,IAAIY,KAAJ,CACJ,sKADI,CAlCM;;AAAA;AAuCd;AACAlB,YAAAA,MAAM,CAACK,SAAP,GAAmBA,SAAnB;AAxCc;AAAA,mBA0CR,gCAAkB;AACtBL,cAAAA,MAAM,EAANA;AADsB,aAAlB,CA1CQ;;AAAA;AAAA,6CA8CPK,SA9CO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAec,gB;;;;SAAAA,gB","sourcesContent":["import chalk from 'chalk'\nimport { time, timeEnd } from '../utils'\n\nimport generateTemplates from './generateTemplates'\n\nexport default (async function extractTemplates(config) {\n  console.log('=> Building Templates')\n  time(chalk.green('=> [\\u2713] Templates Built'))\n\n  // Dedupe all templates into an array\n  const templates = []\n  let notFoundPending = true\n\n  config.routes.forEach(route => {\n    if (!route.component) {\n      return\n    }\n    // Check if the template has already been added\n    const index = templates.indexOf(route.component)\n    if (index === -1) {\n      // If it's new, add it\n      if (route.path === '404') {\n        templates.unshift(route.component)\n        notFoundPending = false\n        route.templateIndex = 0\n      } else {\n        templates.push(route.component)\n        route.templateIndex = notFoundPending\n          ? templates.length\n          : templates.length - 1\n      }\n    } else {\n      // Assign the existing templateIndex\n      route.templateIndex = notFoundPending ? index + 1 : index\n    }\n  })\n  timeEnd(chalk.green('=> [\\u2713] Templates Built'))\n\n  if (notFoundPending) {\n    throw new Error(\n      'A 404 template was not found at template extractiont time. It should have been at least defaulted to one by now, so this is very bad. File an issue if you see this.'\n    )\n  }\n\n  // Make sure 404 template is the first one\n  config.templates = templates\n\n  await generateTemplates({\n    config,\n  })\n\n  return templates\n})\n"],"file":"extractTemplates.js"}