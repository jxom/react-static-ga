{"version":3,"sources":["../../src/static/generateTemplates.js"],"names":["config","templates","paths","reactStaticUniversalPath","process","env","REACT_STATIC_UNIVERSAL_PATH","split","join","productionImports","developmentImports","productionTemplates","map","template","index","templatePath","path","relative","DIST","resolve","ROOT","chunkName","startsWith","developmentTemplates","file","NODE_ENV","dynamicRoutesPath","fs","remove","outputFile"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;4BAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAASA,YAAAA,MAAT,QAASA,MAAT;AACLC,YAAAA,SADK,GACgBD,MADhB,CACLC,SADK,EACMC,KADN,GACgBF,MADhB,CACME,KADN,EAGb;AACA;;AACMC,YAAAA,wBALO,GAKoBC,OAAO,CAACC,GAAR,CAAYC,2BAAZ,CAAwCC,KAAxC,CAC/B,IAD+B,EAE/BC,IAF+B,CAE1B,GAF0B,CALpB;AASPC,YAAAA,iBATO,2DAS8DN,wBAT9D;AAUPO,YAAAA,kBAVO,GAUc,EAVd;AAYPC,YAAAA,mBAZO,iRAuBbV,SAAS,CACNW,GADH,CACO,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACxB,kBAAIC,YAAY,GAAGC,cAAKC,QAAL,CACjBf,KAAK,CAACgB,IADW,EAEjBF,cAAKG,OAAL,CAAajB,KAAK,CAACkB,IAAnB,EAAyBP,QAAzB,CAFiB,CAAnB;;AAKA,kBAAIQ,SAAS,GAAG,EAAhB,CANwB,CAQxB;AACA;;AACA,kBAAI,CAACnB,KAAK,CAACgB,IAAN,CAAWI,UAAX,CAAsBpB,KAAK,CAACkB,IAA5B,CAAL,EAAwC;AACtCL,gBAAAA,YAAY,GAAGC,cAAKG,OAAL,CAAajB,KAAK,CAACkB,IAAnB,EAAyBP,QAAzB,CAAf;AAEAQ,gBAAAA,SAAS,oCAA4B,qCAAkBR,QAAlB,CAA5B,UAAT;AACD;;AAED,uCAAkBC,KAAlB,kCAA+C,oBAC7CC,YAD6C,CAA/C,cAEKM,SAFL;AAGD,aApBH,EAqBGb,IArBH,CAqBQ,IArBR,CAvBa;AA+CPe,YAAAA,oBA/CO,GA+CgBtB,SAAS,CACnCW,GAD0B,CACtB,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACxB,kBAAMC,YAAY,GAAGC,cAAKC,QAAL,CACnBf,KAAK,CAACgB,IADa,EAEnBF,cAAKG,OAAL,CAAajB,KAAK,CAACkB,IAAnB,EAAyBP,QAAzB,CAFmB,CAArB;;AAIA,wCAAmBC,KAAnB,oBAAkC,oBAAMC,YAAN,CAAlC;AACD,aAP0B,EAQ1BP,IAR0B,CAQrB,IARqB,CA/ChB;AAyDPgB,YAAAA,IAzDO,eA2DXpB,OAAO,CAACC,GAAR,CAAYoB,QAAZ,KAAyB,YAAzB,GACIhB,iBADJ,GAEIC,kBA7DO,iBAiEXN,OAAO,CAACC,GAAR,CAAYoB,QAAZ,KAAyB,YAAzB,GACId,mBADJ,GAEIY,oBAnEO,sDAwEXtB,SAAS,CAACW,GAAV,CAAc,UAACC,QAAD,EAAWC,KAAX;AAAA,iCAA0BA,KAA1B;AAAA,aAAd,EAAiDN,IAAjD,CAAsD,KAAtD,CAxEW;AA4EPkB,YAAAA,iBA5EO,GA4EaV,cAAKR,IAAL,CAAUN,KAAK,CAACgB,IAAhB,EAAsB,2BAAtB,CA5Eb;AAAA;AAAA,mBA6EPS,iBAAGC,MAAH,CAAUF,iBAAV,CA7EO;;AAAA;AAAA;AAAA,mBA8EPC,iBAAGE,UAAH,CAAcH,iBAAd,EAAiCF,IAAjC,CA9EO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import path from 'path'\nimport slash from 'slash'\nimport fs from 'fs-extra'\nimport { chunkNameFromFile } from '../utils/chunkBuilder'\n\nexport default async ({ config }) => {\n  const { templates, paths } = config\n\n  // convert Windows-style path separators to the Unix style to ensure sure the\n  // string literal is valid and doesn't contain escaped characters\n  const reactStaticUniversalPath = process.env.REACT_STATIC_UNIVERSAL_PATH.split(\n    '\\\\'\n  ).join('/')\n\n  const productionImports = `import universal, { setHasBabelPlugin } from '${reactStaticUniversalPath}'`\n  const developmentImports = ''\n\n  const productionTemplates = `\nsetHasBabelPlugin()\n\nconst universalOptions = {\n  loading: () => null,\n  error: props => {\n    console.error(props.error);\n    return <div>An error occurred loading this page's template. More information is available in the console.</div>;\n  },\n}\n\n${templates\n    .map((template, index) => {\n      let templatePath = path.relative(\n        paths.DIST,\n        path.resolve(paths.ROOT, template)\n      )\n\n      let chunkName = ''\n\n      // relative resolving produces the wrong path, a \"../\" is missing\n      // as the files looks equal, we simple use an absolute path then\n      if (!paths.DIST.startsWith(paths.ROOT)) {\n        templatePath = path.resolve(paths.ROOT, template)\n\n        chunkName = `/* webpackChunkName: \"${chunkNameFromFile(template)}\" */`\n      }\n\n      return `const t_${index} = universal(import('${slash(\n        templatePath\n      )}'${chunkName}), universalOptions)`\n    })\n    .join('\\n')}\n`\n\n  const developmentTemplates = templates\n    .map((template, index) => {\n      const templatePath = path.relative(\n        paths.DIST,\n        path.resolve(paths.ROOT, template)\n      )\n      return `import t_${index} from '${slash(templatePath)}'`\n    })\n    .join('\\n')\n\n  const file = `\n${\n    process.env.NODE_ENV === 'production'\n      ? productionImports\n      : developmentImports\n  }\n\n${\n    process.env.NODE_ENV === 'production'\n      ? productionTemplates\n      : developmentTemplates\n  }\n\n// Template Map\nexport default [\n  ${templates.map((template, index) => `t_${index}`).join(',\\n')}\n]\n`\n\n  const dynamicRoutesPath = path.join(paths.DIST, 'react-static-templates.js')\n  await fs.remove(dynamicRoutesPath)\n  await fs.outputFile(dynamicRoutesPath, file)\n}\n"],"file":"generateTemplates.js"}