{"version":3,"sources":["../../../src/static/components/HeadWithMeta.js"],"names":["REGEX_FOR_STYLE_TAG","InlineStyle","clientCss","__html","toString","replace","makeHeadWithMeta","head","route","clientScripts","config","clientStyleSheets","meta","HeadHookMapper","plugins","pluginHeads","children","rest","renderLinkCSS","redirect","inlineCss","useHelmetTitle","title","props","childrenArray","React","Children","toArray","cloneElement","key","filter","child","type","childrenCSS","rel","childrenJS","base","map","script","process","env","REACT_STATIC_ASSETS_PATH","reduce","memo","styleSheet","href","link","noscript","style"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { pathJoin, makePathAbsolute, makeHookMapper } from '../../utils'\n// import packagejson from '../../../package.json'\n\n// const { version } = packagejson\n\nconst REGEX_FOR_STYLE_TAG = /<style>|<\\/style>/gi\n\nexport const InlineStyle = ({ clientCss }) => (\n  <style\n    key=\"clientCss\"\n    type=\"text/css\"\n    dangerouslySetInnerHTML={{\n      __html: clientCss.toString().replace(REGEX_FOR_STYLE_TAG, ''),\n    }}\n  />\n)\n\nexport async function makeHeadWithMeta({\n  head,\n  route,\n  clientScripts,\n  config,\n  clientStyleSheets,\n  clientCss,\n  meta,\n}) {\n  const HeadHookMapper = makeHookMapper(config.plugins, 'Head')\n  const pluginHeads = await HeadHookMapper({ meta })\n\n  return ({ children, ...rest }) => {\n    const renderLinkCSS = !route.redirect && !config.inlineCss\n    const useHelmetTitle =\n      head.title && head.title[0] && head.title[0].props.children !== ''\n    let childrenArray = React.Children.toArray(children)\n    if (useHelmetTitle) {\n      head.title[0] = React.cloneElement(head.title[0], { key: 'title' })\n      childrenArray = childrenArray.filter(child => {\n        if (child.type === 'title') {\n          // Filter out the title of the Document in static.config.js\n          // if there is a helmet title on this route\n          return false\n        }\n        return true\n      })\n    }\n    const childrenCSS = childrenArray.filter(child => {\n      if (\n        child.type === 'link' &&\n        child.props &&\n        child.props.rel === 'stylesheet'\n      ) {\n        return true\n      } else if (child.type === 'style') {\n        return true\n      }\n      return false\n    })\n    const childrenJS = childrenArray.filter(child => child.type === 'script')\n    childrenArray = childrenArray.filter(child => {\n      if (\n        child.type === 'link' &&\n        child.props &&\n        child.props.rel === 'stylesheet'\n      ) {\n        return false\n      } else if (child.type === 'style') {\n        return false\n      } else if (child.type === 'script') {\n        return false\n      }\n      return true\n    })\n\n    return (\n      <head {...rest}>\n        {/* {process.env.NODE_ENV !== 'testing' ? (\n          <meta name=\"generator\" content={`React Static ${version}`} />\n        ) : null} */}\n        {head.base}\n        {useHelmetTitle && head.title}\n        {head.meta}\n        {childrenJS}\n        {!route.redirect &&\n          clientScripts.map(script => (\n            <link\n              key={`clientScript_${script}`}\n              rel=\"preload\"\n              as=\"script\"\n              href={makePathAbsolute(\n                pathJoin(process.env.REACT_STATIC_ASSETS_PATH, script)\n              )}\n            />\n          ))}\n        {childrenCSS}\n        {renderLinkCSS &&\n          clientStyleSheets.reduce((memo, styleSheet) => {\n            const href = makePathAbsolute(\n              pathJoin(process.env.REACT_STATIC_ASSETS_PATH, styleSheet)\n            )\n\n            return [\n              ...memo,\n              <link\n                key={`clientStyleSheetPreload_${styleSheet}`}\n                rel=\"preload\"\n                as=\"style\"\n                href={href}\n              />,\n              <link\n                key={`clientStyleSheet_${styleSheet}`}\n                rel=\"stylesheet\"\n                href={href}\n              />,\n            ]\n          }, [])}\n        {head.link}\n        {head.noscript}\n        {head.script}\n        {config.inlineCss && <InlineStyle clientCss={clientCss} />}\n        {head.style}\n        {pluginHeads}\n        {childrenArray}\n      </head>\n    )\n  }\n}\n"],"file":"HeadWithMeta.js"}