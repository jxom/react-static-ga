{"version":3,"sources":["../../src/static/buildXML.js"],"names":["REGEX_TO_GET_LAST_SLASH","getPermaLink","path","prefixPath","permalink","replace","makeGenerateRouteXML","route","lastModified","priority","c","Error","join","generateXML","routes","filter","r","noindex","map","config","paths","disableRoutePrefixing","DIST","siteRoot","process","env","REACT_STATIC_PUBLIC_PATH","xml","fs","writeFile","nodePath"],"mappings":"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","sourcesContent":["import fs from 'fs-extra'\nimport nodePath from 'path'\n\nimport { pathJoin } from '../utils'\n\nconst REGEX_TO_GET_LAST_SLASH = /\\/{1,}$/gm\n\nexport const getPermaLink = ({ path, prefixPath }) => {\n  const permalink = `${prefixPath}${pathJoin(path)}`\n  return `${permalink}/`.replace(REGEX_TO_GET_LAST_SLASH, '/')\n}\n\nexport const makeGenerateRouteXML = ({ prefixPath }) => route => {\n  const { path, lastModified, priority = 0.5 } = route\n  return [\n    '<url>',\n    `<loc>${getPermaLink({ path, prefixPath }).replace(/[<>&'\"]/g, c => {\n      switch (c) {\n        case '<':\n          return '&lt;'\n        case '>':\n          return '&gt;'\n        case '&':\n          return '&amp;'\n        case \"'\":\n          return '&apos;'\n        case '\"':\n          return '&quot;'\n        default:\n          throw new Error('XML encoding failed')\n      }\n    })}</loc>`,\n    lastModified ? `<lastmod>${lastModified}</lastmod>` : '',\n    `<priority>${priority}</priority>`,\n    '</url>',\n  ].join('')\n}\n\nexport const generateXML = ({ routes, prefixPath }) =>\n  `<?xml version=\"1.0\" encoding=\"UTF-8\"?><urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">${routes\n    .filter(r => r.path !== '404')\n    .filter(r => !r.noindex)\n    .map(makeGenerateRouteXML({ prefixPath }))\n    .join('')}</urlset>`\n\nexport default async ({ config }) => {\n  const { routes, paths = {}, disableRoutePrefixing } = config\n\n  const { DIST } = paths\n  const prefixPath = disableRoutePrefixing\n    ? config.siteRoot\n    : process.env.REACT_STATIC_PUBLIC_PATH\n\n  if (!config.siteRoot) {\n    return\n  }\n\n  const xml = generateXML({ routes, prefixPath })\n\n  await fs.writeFile(nodePath.join(DIST, 'sitemap.xml'), xml)\n}\n"],"file":"buildXML.js"}