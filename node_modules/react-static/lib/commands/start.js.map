{"version":3,"sources":["../../src/commands/start.js"],"names":["cleaned","indexCreated","configPath","config","debug","process","env","NODE_ENV","REACT_STATIC_DEBUG","REACT_STATIC_ENV","BABEL_ENV","console","log","fs","remove","paths","DIST","getSiteData","dev","siteData","opts","Promise","start"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAOA;;AACA;;;;;;;;;;;;;;AACA;AAEA,IAAIA,OAAJ;AACA,IAAIC,YAAJ;;;;;;;4BAEgB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8EAAqD,EAArD,EAA+BC,UAA/B,QAAuBC,MAAvB,EAA2CC,KAA3C,QAA2CA,KAA3C;;AACd;AACA,gBAAI,OAAOC,OAAO,CAACC,GAAR,CAAYC,QAAnB,KAAgC,WAApC,EAAiD;AAC/CF,cAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,aAAvB;AACD;;AACD,gBAAIH,KAAJ,EAAW;AACTC,cAAAA,OAAO,CAACC,GAAR,CAAYE,kBAAZ,GAAiC,MAAjC;AACD;;AACDH,YAAAA,OAAO,CAACC,GAAR,CAAYG,gBAAZ,GAA+B,aAA/B;AACAJ,YAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ,GAAwB,aAAxB,CATc,CAWd;;AAXc;AAAA,mBAYR,uBAAUR,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAsB,kBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAC1B,4BAAIC,KAAJ,EAAW;AACTO,0BAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,0BAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACD;;AAJyB,4BAMrBH,OANqB;AAAA;AAAA;AAAA;;AAOxBA,wBAAAA,OAAO,GAAG,IAAV,CAPwB,CAQxB;;AARwB;AAAA,+BASlBa,iBAAGC,MAAH,CAAUX,MAAM,CAACY,KAAP,CAAaC,IAAvB,CATkB;;AAAA;AAAA;AAAA,+BAaFb,MAAM,CAACc,WAAP,CAAmB;AAAEC,0BAAAA,GAAG,EAAE;AAAP,yBAAnB,CAbE;;AAAA;AAa1Bf,wBAAAA,MAAM,CAACgB,QAbmB;;AAAA,4BAgBrBlB,YAhBqB;AAAA;AAAA;AAAA;;AAiBxBA,wBAAAA,YAAY,GAAG,IAAf;AAjBwB;AAAA,+BAkBlB,uCAA2B;AAC/BE,0BAAAA,MAAM,EAANA;AAD+B,yBAA3B,CAlBkB;;AAAA;AAAA;AAAA,+BAuBX,4BAAe;AAAEA,0BAAAA,MAAM,EAANA;AAAF,yBAAf,CAvBW;;AAAA;AAuB1BA,wBAAAA,MAvB0B;AAAA;AAAA,+BAyBpB,2BAAc;AAAEA,0BAAAA,MAAM,EAANA,MAAF;AAAUiB,0BAAAA,IAAI,EAAE;AAAEF,4BAAAA,GAAG,EAAE;AAAP;AAAhB,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA,oDAA+C,iBAAMf,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAC7C,+BAAiBA,MAAjB,CAD6C;;AAAA;AAEnD,gEAFmD,CAInD;;AAJmD;AAAA,2CAK7C,4BAAe;AAAEA,sCAAAA,MAAM,EAANA;AAAF,qCAAf,CAL6C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA/C;;AAAA;AAAA;AAAA;AAAA,4BAzBoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtB;;AAAA;AAAA;AAAA;AAAA,gBAZQ;;AAAA;AAAA;AAAA,mBA8CR,IAAIkB,OAAJ,CAAY,YAAM,CAEvB,CAFK,CA9CQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeC,K;;;;SAAAA,K;;;;;;;;;;;;;;;0BAH3BtB,O;0BACAC,Y","sourcesContent":["import fs from 'fs-extra'\n//\nimport {\n  prepareRoutes,\n  preparePlugins,\n  startDevServer,\n  reloadRoutes,\n  getConfig,\n} from '../static'\nimport extractTemplates from '../static/extractTemplates'\nimport { createIndexFilePlaceholder } from '../utils'\n//\n\nlet cleaned\nlet indexCreated\n\nexport default (async function start({ config: configPath, debug } = {}) {\n  // ensure ENV variables are set\n  if (typeof process.env.NODE_ENV === 'undefined') {\n    process.env.NODE_ENV = 'development'\n  }\n  if (debug) {\n    process.env.REACT_STATIC_DEBUG = 'true'\n  }\n  process.env.REACT_STATIC_ENV = 'development'\n  process.env.BABEL_ENV = 'development'\n\n  // Use callback style to subscribe to changes\n  await getConfig(configPath, async config => {\n    if (debug) {\n      console.log('DEBUG - Resolved static.config.js:')\n      console.log(config)\n    }\n\n    if (!cleaned) {\n      cleaned = true\n      // Clean the dist folder\n      await fs.remove(config.paths.DIST)\n    }\n\n    // Get the site data\n    config.siteData = await config.getSiteData({ dev: true })\n\n    // Render an index.html placeholder\n    if (!indexCreated) {\n      indexCreated = true\n      await createIndexFilePlaceholder({\n        config,\n      })\n    }\n\n    config = await preparePlugins({ config })\n\n    await prepareRoutes({ config, opts: { dev: true } }, async config => {\n      await extractTemplates(config)\n      reloadRoutes()\n\n      // Build the JS bundle\n      await startDevServer({ config })\n    })\n  })\n\n  await new Promise(() => {\n    // Do nothing, the user must exit this command\n  })\n})\n"],"file":"start.js"}