{"version":3,"sources":["../../../src/browser/utils/Location.js"],"names":["locationSubscribers","triggerLocationChange","location","forEach","s","onLocationChange","cb","push","filter","d","init","document","oldPopstate","window","onpopstate","methodName","old","history","setTimeout","args","apply"],"mappings":";;;;;;;;;;;;;AAAA,IAAIA,mBAAmB,GAAG,EAA1B;;AACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,QAAQ;AAAA,SACpCF,mBAAmB,CAACG,OAApB,CAA4B,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACF,QAAD,CAAL;AAAA,GAA7B,CADoC;AAAA,CAAtC;;AAEA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,EAAE,EAAI;AAC7BN,EAAAA,mBAAmB,CAACO,IAApB,CAAyBD,EAAzB;AACA,SAAO,YAAM;AACXN,IAAAA,mBAAmB,GAAGA,mBAAmB,CAACQ,MAApB,CAA2B,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAKH,EAAV;AAAA,KAA5B,CAAtB;AACD,GAFD;AAGD,CALD;;AAOAI,IAAI;eAEWL,gB;;;;AAEf,SAASK,IAAT,GAAgB;AACd,MAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACnC,QAAMC,WAAW,GAAGC,MAAM,CAACC,UAA3B;;AACAD,IAAAA,MAAM,CAACC,UAAP,GAAoB,YAAa;AAC/B,UAAIF,WAAJ,EAAiB;AACfA,QAAAA,WAAW,MAAX;AACD;;AACDX,MAAAA,qBAAqB,CAACY,MAAM,CAACX,QAAR,CAArB;AACD,KALD;;AAMC,KAAC,WAAD,EAAc,cAAd,EAA8BC,OAA9B,CAAsC,UAAAY,UAAU,EAAI;AACnD,UAAMC,GAAG,GAAGH,MAAM,CAACI,OAAP,CAAeF,UAAf,CAAZ;;AACAF,MAAAA,MAAM,CAACI,OAAP,CAAeF,UAAf,IAA6B,YAAa;AACxCG,QAAAA,UAAU,CAAC;AAAA,iBAAMjB,qBAAqB,CAACY,MAAM,CAACX,QAAR,CAA3B;AAAA,SAAD,EAA+C,CAA/C,CAAV;;AADwC,0CAATiB,IAAS;AAATA,UAAAA,IAAS;AAAA;;AAExC,eAAOH,GAAG,CAACI,KAAJ,CAAUP,MAAM,CAACI,OAAjB,EAA0BE,IAA1B,CAAP;AACD,OAHD;AAID,KANA;AAOF;AACF;;;;;;;;;;;;;0BA/BGnB,mB;0BACEC,qB;0BAEAI,gB;0BAWGK,I","sourcesContent":["let locationSubscribers = []\nconst triggerLocationChange = location =>\n  locationSubscribers.forEach(s => s(location))\nconst onLocationChange = cb => {\n  locationSubscribers.push(cb)\n  return () => {\n    locationSubscribers = locationSubscribers.filter(d => d !== cb)\n  }\n}\n\ninit()\n\nexport default onLocationChange\n\nfunction init() {\n  if (typeof document !== 'undefined') {\n    const oldPopstate = window.onpopstate\n    window.onpopstate = (...args) => {\n      if (oldPopstate) {\n        oldPopstate(...args)\n      }\n      triggerLocationChange(window.location)\n    }\n    ;['pushState', 'replaceState'].forEach(methodName => {\n      const old = window.history[methodName]\n      window.history[methodName] = (...args) => {\n        setTimeout(() => triggerLocationChange(window.location), 0)\n        return old.apply(window.history, args)\n      }\n    })\n  }\n}\n"],"file":"Location.js"}