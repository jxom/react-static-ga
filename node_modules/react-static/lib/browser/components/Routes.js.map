{"version":3,"sources":["../../../src/browser/components/Routes.js"],"names":["RoutePathContext","React","createContext","withRoutePathContext","Comp","props","routePath","unmounted","forceUpdate","templateUpdated","cb","safeForceUpdate","offLocationChange","children","Loader","staticInfo","path","getComponentForPath","templatesByPath","is404","templateErrorByPath","Error","Promise","all","priority","resolve","setTimeout","process","env","REACT_STATIC_MIN_LOAD_TIME","newProps","Component","Spinner"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n//\nimport {\n  templatesByPath,\n  templateErrorByPath,\n  templateUpdated,\n  prefetch,\n  getCurrentRoutePath,\n} from '../'\nimport { withStaticInfo } from './StaticInfo'\nimport { getRoutePath, isSSR } from '../utils'\nimport onLocation from '../utils/Location'\nimport Spinner from './Spinner'\n\nconst RoutePathContext = React.createContext()\n\nexport const withRoutePathContext = Comp => props => (\n  <RoutePathContext.Consumer>\n    {routePath => <Comp {...props} routePath={routePath} />}\n  </RoutePathContext.Consumer>\n)\n\nexport default withStaticInfo(\n  class Routes extends Component {\n    static defaultProps = {\n      Loader: Spinner,\n    }\n    componentDidMount() {\n      templateUpdated.cb = () => this.safeForceUpdate()\n      this.offLocationChange = onLocation(() => this.safeForceUpdate())\n    }\n    componentWillUnmount() {\n      this.unmounted = true\n      if (this.offLocationChange) this.offLocationChange()\n    }\n    safeForceUpdate = () => {\n      if (this.unmounted) {\n        return\n      }\n      this.forceUpdate()\n    }\n    render() {\n      const { children, Loader, staticInfo } = this.props\n\n      const routePath = isSSR() ? staticInfo.path : getCurrentRoutePath()\n\n      const getComponentForPath = routePath => {\n        // Clean the path\n        routePath = getRoutePath(routePath)\n\n        // Try and get the component\n        let Comp = templatesByPath[routePath]\n\n        // Detect a 404\n        let is404 = routePath === '404'\n\n        // Detect a failed template\n        if (templateErrorByPath[routePath]) {\n          is404 = true\n          Comp = templatesByPath['404']\n        }\n\n        // Detect an unloaded template\n        // TODO:suspense - This will become a suspense resource\n        if (!Comp) {\n          if (is404) {\n            throw new Error(\n              'This page template could not be found and a 404 template could not be found to fall back on. This means something is terribly wrong and you should probably file an issue!'\n            )\n          }\n          ;(async () => {\n            await Promise.all([\n              prefetch(routePath, { priority: true }),\n              new Promise(resolve =>\n                setTimeout(resolve, process.env.REACT_STATIC_MIN_LOAD_TIME)\n              ),\n            ])\n            this.safeForceUpdate()\n          })()\n          return Loader\n        }\n\n        return (newProps = {}) =>\n          Comp ? (\n            <Comp {...newProps} {...(is404 ? { is404: true } : {})} />\n          ) : null\n      }\n\n      const Comp = getComponentForPath(routePath)\n\n      return (\n        <RoutePathContext.Provider value={routePath}>\n          {children ? (\n            children({\n              routePath,\n              getComponentForPath,\n            })\n          ) : (\n            <Comp />\n          )}\n        </RoutePathContext.Provider>\n      )\n    }\n  }\n)\n"],"file":"Routes.js"}