{"version":3,"sources":["../../../src/browser/components/RouteData.js"],"names":["instances","global","reloadAll","forEach","instance","safeForceUpdate","RouteData","unmounted","forceUpdate","push","filter","d","props","children","Loader","routePath","routeErrorByPath","Error","routeInfoByPath","data","Promise","all","priority","resolve","setTimeout","process","env","REACT_STATIC_MIN_LOAD_TIME","React","Component","Spinner","withRouteData","Comp","opts","routeData"],"mappings":";;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,SAAS,GAAG,EAAhB;;AAEAC,MAAM,CAACC,SAAP,GAAmB,YAAM;AACvBF,EAAAA,SAAS,CAACG,OAAV,CAAkB,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,eAAT,EAAJ;AAAA,GAA1B;AACD,CAFD;;AAIA,IAAMC,SAAS,GAAG,gCAChB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,8FAYsB,YAAM;AACtB,UAAI,MAAKC,SAAT,EAAoB;AAClB;AACD;;AACD,YAAKC,WAAL;AACD,KAjBL;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAKwB;AAClBR,MAAAA,SAAS,CAACS,IAAV,CAAe,IAAf;AACD;AAPL;AAAA;AAAA,2CAQ2B;AAAA;;AACrBT,MAAAA,SAAS,GAAGA,SAAS,CAACU,MAAV,CAAiB,UAAAC,CAAC;AAAA,eAAIA,CAAC,KAAK,MAAV;AAAA,OAAlB,CAAZ;AACA,WAAKJ,SAAL,GAAiB,IAAjB;AACD;AAXL;AAAA;AAAA,6BAkBa;AAAA;;AAAA,wBACiC,KAAKK,KADtC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,MADX,eACWA,MADX;AAAA,UACmBC,SADnB,eACmBA,SADnB,EAGP;;AACA,UAAIC,mBAAiBD,SAAjB,CAAJ,EAAiC;AAC/B,cAAM,IAAIE,KAAJ,6EACiEF,SADjE,wHAAN;AAGD,OARM,CAUP;AACA;AACA;;;AACA,UAAI,CAACG,kBAAgBH,SAAhB,CAAD,IAA+B,CAACG,kBAAgBH,SAAhB,EAA2BI,IAA/D,EAAqE;AACnE;;AAAC;AAAA;AAAA,kCAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACMC,OAAO,CAACC,GAAR,CAAY,CAChB,gBAASN,SAAT,EAAoB;AAAEO,oBAAAA,QAAQ,EAAE;AAAZ,mBAApB,CADgB,EAEhB,IAAIF,OAAJ,CAAY,UAAAG,OAAO;AAAA,2BACjBC,UAAU,CAACD,OAAD,EAAUE,OAAO,CAACC,GAAR,CAAYC,0BAAtB,CADO;AAAA,mBAAnB,CAFgB,CAAZ,CADN;;AAAA;AAOA,kBAAA,MAAI,CAACtB,eAAL;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD;;AASD,eAAO,6BAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAxBM,CA0BP;;;AACA,aAAOQ,QAAQ,CAACK,kBAAgBH,SAAhB,EAA2BI,IAA5B,CAAf;AACD;AA9CL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAC0BS,eAAMC,SADhC,2CAE0B;AACpBf,EAAAA,MAAM,EAAEgB;AADY,CAF1B,UADgB,CAAlB;eAoDexB,S;;;;AAER,SAASyB,aAAT,CAAuBC,IAAvB,EAAwC;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AAC7C,SAAO,UAAArB,KAAK;AAAA,WACV,6BAAC,SAAD,eAAeqB,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACG,UAAAC,SAAS;AAAA,aAAI,6BAAC,IAAD,eAAUA,SAAV,EAAyBtB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KADZ,CADU;AAAA,GAAZ;AAKD;;;;;;;;;;;;;0BAlEGZ,S;0BAMEM,S;0BAsDUyB,a","sourcesContent":["import React from 'react'\n\nimport { prefetch, routeInfoByPath, routeErrorByPath } from '../'\nimport Spinner from './Spinner'\nimport { withStaticInfo } from './StaticInfo'\nimport { withRoutePathContext } from './Routes'\n\nlet instances = []\n\nglobal.reloadAll = () => {\n  instances.forEach(instance => instance.safeForceUpdate())\n}\n\nconst RouteData = withStaticInfo(\n  withRoutePathContext(\n    class RouteData extends React.Component {\n      static defaultProps = {\n        Loader: Spinner,\n      }\n      componentDidMount() {\n        instances.push(this)\n      }\n      componentWillUnmount() {\n        instances = instances.filter(d => d !== this)\n        this.unmounted = true\n      }\n      safeForceUpdate = () => {\n        if (this.unmounted) {\n          return\n        }\n        this.forceUpdate()\n      }\n      render() {\n        const { children, Loader, routePath } = this.props\n\n        // If there was an error reported for this path, throw an error\n        if (routeErrorByPath[routePath]) {\n          throw new Error(\n            `React-Static: <RouteData> could not find any data for this route: ${routePath}. If this is a dynamic route, please remove any reliance on RouteData or withRouteData from this routes components`\n          )\n        }\n\n        // If we haven't requested the routeInfo yet, or it's loading\n        // Show a spinner and prefetch the data\n        // TODO:suspense - This will become a suspense resource\n        if (!routeInfoByPath[routePath] || !routeInfoByPath[routePath].data) {\n          ;(async () => {\n            await Promise.all([\n              prefetch(routePath, { priority: true }),\n              new Promise(resolve =>\n                setTimeout(resolve, process.env.REACT_STATIC_MIN_LOAD_TIME)\n              ),\n            ])\n            this.safeForceUpdate()\n          })()\n          return <Loader />\n        }\n\n        // Otherwise, get it from the routeInfoByPath (subsequent client side)\n        return children(routeInfoByPath[routePath].data)\n      }\n    }\n  )\n)\n\nexport default RouteData\n\nexport function withRouteData(Comp, opts = {}) {\n  return props => (\n    <RouteData {...opts}>\n      {routeData => <Comp {...routeData} {...props} />}\n    </RouteData>\n  )\n}\n"],"file":"RouteData.js"}