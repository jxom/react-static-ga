{"version":3,"sources":["../../../src/browser/components/HashScroller.js"],"names":["RouterScroller","props","autoScrollToTop","scrollToTopDuration","duration","hash","orScrollToTop","scrollToHashDuration","autoScrollToHash","scrollToHashOffset","resolvedHash","substring","element","document","getElementById","offset","scrollToHash","window","location","pathname","prevPathname","scrollToTop","prevHash","children","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,c;;;;;;;;;;;;;;;;;;0FAeL,YAAM;AAAA,wBAC+B,MAAKC,KADpC;AAAA,UACVC,eADU,eACVA,eADU;AAAA,UACOC,mBADP,eACOA,mBADP;;AAElB,UAAID,eAAJ,EAAqB;AACnB,+BAAS,CAAT,EAAY;AACVE,UAAAA,QAAQ,EAAED;AADA,SAAZ;AAGD;AACF,K;;2FACc,UAACE,IAAD,EAAyC;AAAA,qFAAP,EAAO;AAAA,oCAAhCC,aAAgC;AAAA,UAAhCA,aAAgC,mCAAhB,IAAgB;;AAAA,yBAKlD,MAAKL,KAL6C;AAAA,UAEpDM,oBAFoD,gBAEpDA,oBAFoD;AAAA,UAGpDC,gBAHoD,gBAGpDA,gBAHoD;AAAA,UAIpDC,kBAJoD,gBAIpDA,kBAJoD;;AAMtD,UAAI,CAACD,gBAAL,EAAuB;AACrB;AACD;;AACD,UAAIH,IAAJ,EAAU;AACR,YAAMK,YAAY,GAAGL,IAAI,CAACM,SAAL,CAAe,CAAf,CAArB;;AACA,YAAID,YAAJ,EAAkB;AAChB;AACA,cAAME,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,YAAxB,CAAhB;;AACA,cAAIE,OAAO,KAAK,IAAhB,EAAsB;AACpB,mCAASA,OAAT,EAAkB;AAChBR,cAAAA,QAAQ,EAAEG,oBADM;AAEhBQ,cAAAA,MAAM,EAAEN;AAFQ,aAAlB;AAID,WALD,MAKO;AACL,8BAAI,YAAM;AACR,kBAAMG,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,YAAxB,CAAhB;;AACA,kBAAIE,OAAO,KAAK,IAAhB,EAAsB;AACpB,uCAASA,OAAT,EAAkB;AAChBR,kBAAAA,QAAQ,EAAEG,oBADM;AAEhBQ,kBAAAA,MAAM,EAAEN;AAFQ,iBAAlB;AAID;AACF,aARD;AASD;AACF;AACF,OAtBD,MAsBO,IAAIH,aAAJ,EAAmB;AACxB,+BAAS,CAAT,EAAY;AACVF,UAAAA,QAAQ,EAAEG;AADA,SAAZ;AAGD;AACF,K;;;;;;;wCA1DmB;AAAA;;AAClB;AACA,WAAKS,YAAL,CAAkBC,MAAM,CAACC,QAAP,CAAgBb,IAAlC,EAAwC;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAxC;AAEA,6BAAiB,iBAAwB;AAAA,YAArBD,IAAqB,SAArBA,IAAqB;AAAA,YAAfc,QAAe,SAAfA,QAAe;;AACvC,YAAI,MAAI,CAACC,YAAL,KAAsBD,QAAtB,IAAkC,CAACd,IAAvC,EAA6C;AAC3C,UAAA,MAAI,CAACgB,WAAL;AACD,SAFD,MAEO,IAAI,MAAI,CAACC,QAAL,KAAkBjB,IAAtB,EAA4B;AACjC,UAAA,MAAI,CAACW,YAAL,CAAkBX,IAAlB;AACD;;AACD,QAAA,MAAI,CAACe,YAAL,GAAoBD,QAApB;AACA,QAAA,MAAI,CAACG,QAAL,GAAgBjB,IAAhB;AACD,OARD;AASD;;;6BA8CQ;AACP,aAAO,KAAKJ,KAAL,CAAWsB,QAAlB;AACD;;;;;;;;;;;EA9DyCC,eAAMC,S;;;;;;;;;;;;;;0BAA7BzB,c","sourcesContent":["import React from 'react'\nimport RAF from 'raf'\nimport onLocationChange from '../utils/Location'\n//\nimport scrollTo from '../utils/scrollTo'\n\nexport default class RouterScroller extends React.Component {\n  componentDidMount() {\n    // Do not scroll to top on initial page load if hash does not exist\n    this.scrollToHash(window.location.hash, { orScrollToTop: false })\n\n    onLocationChange(({ hash, pathname }) => {\n      if (this.prevPathname !== pathname && !hash) {\n        this.scrollToTop()\n      } else if (this.prevHash !== hash) {\n        this.scrollToHash(hash)\n      }\n      this.prevPathname = pathname\n      this.prevHash = hash\n    })\n  }\n  scrollToTop = () => {\n    const { autoScrollToTop, scrollToTopDuration } = this.props\n    if (autoScrollToTop) {\n      scrollTo(0, {\n        duration: scrollToTopDuration,\n      })\n    }\n  }\n  scrollToHash = (hash, { orScrollToTop = true } = {}) => {\n    const {\n      scrollToHashDuration,\n      autoScrollToHash,\n      scrollToHashOffset,\n    } = this.props\n    if (!autoScrollToHash) {\n      return\n    }\n    if (hash) {\n      const resolvedHash = hash.substring(1)\n      if (resolvedHash) {\n        // We must attempt to scroll synchronously or we risk the browser scrolling for us\n        const element = document.getElementById(resolvedHash)\n        if (element !== null) {\n          scrollTo(element, {\n            duration: scrollToHashDuration,\n            offset: scrollToHashOffset,\n          })\n        } else {\n          RAF(() => {\n            const element = document.getElementById(resolvedHash)\n            if (element !== null) {\n              scrollTo(element, {\n                duration: scrollToHashDuration,\n                offset: scrollToHashOffset,\n              })\n            }\n          })\n        }\n      }\n    } else if (orScrollToTop) {\n      scrollTo(0, {\n        duration: scrollToHashDuration,\n      })\n    }\n  }\n  render() {\n    return this.props.children\n  }\n}\n"],"file":"HashScroller.js"}